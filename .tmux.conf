set -g default-terminal "xterm"
#bind -n C-b send-prefix
#Swap current window
bind -n M-( swap-window -t -1
bind -n M-) swap-window -t +1

#Cyle through windows(tabs)
unbind [
unbind ]
bind -n M-[ select-window -p
bind -n M-] select-window -n
#Random but nice options
set-option -g   history-limit 100000
set -g mouse on
set -g mouse-utf8 on
unbind -T root WheelUpPane
unbind -T root WheelDownPane
bind-key -T root WheelUpPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
bind-key -T root WheelDownPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; send-keys -M"

bind-key -t vi-copy WheelUpPane halfpage-up
bind-key -t vi-copy WheelDownPane halfpage-down

set-option -g   display-panes-colour red
#status bar style and colors
set-option -g status-fg white
set-option -g status-bg black #removes green bar 
set-window-option -g window-status-fg black
set-window-option -g window-status-bg yellow
set-window-option -g window-status-attr bright
set-option -g status-left-length 40
set-option -g status-left "#[fg=green]Session: #S #[fg=yellow]#I #[fg=cyan]#P"
set-option -g   status-right ' | %d-%m-%Y %H:%M #[default]'
set-window-option -g window-status-current-bg green 
set-window-option -g window-status-current-attr bright
#Window notifications on status bar
set-window-option -g monitor-activity on
set-window-option -g visual-activity on
set-option -g status-justify centre
#Pane style and colors 
set-option -g pane-border-fg default 
set-option -g pane-border-bg default
set-option -g pane-active-border-fg green
set-option -g pane-active-border-bg default

#set-option -g mouse-select-pane on
#set-option -g mouse-resize-pane on


#Session mgmt
unbind-key M-d      ; bind-key -n M-d   detach-client
unbind-key d        ; bind-key d        detach-client
bind k kill-session
#bind c choose-session clashes with create window

# smart pane switching with awareness of vim splits
# vimrc needs functions and plugin too
bind -n C-h run "(tmux display-message -p '#{pane_title}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_title}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_title}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_title}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"



#Window options
set-window-option -g automatic-rename on
set-window-option -g renumber-windows on
#set-window-option -g mouse-select-window on
set-window-option -g utf8 on
set-window-option -g clock-mode-colour yellow
#Window selection
set-option -g   base-index 1

unbind-key M-1      ; bind-key -n M-1   select-window -t 1
unbind-key M-2      ; bind-key -n M-2   select-window -t 2
unbind-key M-3      ; bind-key -n M-3   select-window -t 3
unbind-key M-4      ; bind-key -n M-4   select-window -t 4
unbind-key M-5      ; bind-key -n M-5   select-window -t 5
unbind-key M-6      ; bind-key -n M-6   select-window -t 6
unbind-key M-7      ; bind-key -n M-7   select-window -t 7
unbind-key M-8      ; bind-key -n M-8   select-window -t 8
unbind-key M-9      ; bind-key -n M-9   select-window -t 9
unbind-key M-0      ; bind-key -n M-0   select-window -t 10

#Pane management
unbind %
unbind '"'
bind | split-window -h
bind - split-window -v
#Move around panes vim style
bind -n M-h select-pane -L
bind -n M-j select-pane -D 
bind -n M-k select-pane -U
bind -n M-l select-pane -R
#Resize panes vim style
bind -r h resize-pane -L 5
bind -r j resize-pane -D 5
bind -r k resize-pane -U 5
bind -r l resize-pane -R 5

#Reload tmux config
bind r source-file ~/.tmux.conf \; display "Reloaded!"

#vi movement keys
set-window-option -g status-keys vi
set-window-option -g mode-keys vi
bind Escape copy-mode
unbind p
bind p paste-buffer #pastes latest buffer 

#In OSX we use y to copy selection without entering to copy-mode
#The simple version limited to OSXs bind-key -t vi-copy v #disable rectangle toggle
if-shell "uname | grep -i darwin" 'bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"' 'bind-key -t vi-copy y'

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
if-shell "uname | grep -i darwin" 'bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"' 'bind -t vi-copy Enter'

#adapted from https://robots.thoughtbot.com/how-to-copy-and-paste-with-tmux-on-mac-os-x
#copy the most recent tmux buffer to pbcopy (the system clipboard for OSX).
#the data to be copied to the mac clipbard first needs to be in tmux buffer list
if-shell "uname | grep -i darwin" 'bind C-c run "tmux saveb - | reattach-to-user-namespace pbcopy"'

unbind-key -t vi-copy v #disable rectangle toggle
# Setup 'v' to begin selection as in Vim
bind -t vi-copy v begin-selection 
bind -t vi-copy C-v rectangle-toggle

#Avoid spurious behaviour when hitting esc in VIM
set -s escape-time 0
